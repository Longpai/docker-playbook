---
- name: Check if xdxgpu_driver is installed
  become: yes
  command: dpkg -s xdxgpu
  register: driver_status
  ignore_errors: yes

- name: Copy the driver deb package
  copy:
    src: dist/xdxgpu_dkms_151-{{ ansible_distribution | lower }}_{{ ansible_machine | replace('x86_64', 'amd64') }}.deb
    dest: /tmp/xdxgpu_driver.deb
  when: driver_status.rc != 0

- name: Install the driver deb package
  become: yes
  command: dpkg -i /tmp/xdxgpu_driver.deb
  when: driver_status.rc != 0
  notify: Reboot the machine

- name: Flush handlers
  meta: flush_handlers

- name: Install some related base packages
  become: yes
  become_user: root
  become_method: sudo
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - tar
    - wget
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
  environment: 
   http_proxy: "{{ http_proxy }}"
   https_proxy: "{{ http_proxy }}"

- name: debug
  debug:
    var: "{{ ansible_machine }}"

- name: Check if the GPG key is exists
  stat: 
    path: /usr/share/keyrings/docker-archive-keyring.gpg
  register: gpg_info

- name: Add the GPG key of docker mirror
  become: yes
  shell: >
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg
    | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  when: not gpg_info.stat.exists
  environment: 
   http_proxy: "{{ http_proxy }}"
   https_proxy: "{{ http_proxy }}"

- name: Check if the apt-mirrors keys exists
  become: yes
  stat:
    path: /etc/apt/trusted.gpg.d/vircloud-apt-key.pub
  register: apt_info

- name: Distribute the key of apt mirror
  become: yes
  copy:
    src: vircloud-apt-key.pub
    dest: /etc/apt/trusted.gpg.d/vircloud-apt-key.pub
    mode: 0644
  when: not apt_info.stat.exists

- name: Add multiple repositories
  become: yes
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items:
    - 'deb [arch=amd64] http://10.211.10.15:5019 xdxct-vircloud main'
    - 'deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable'
  environment: 
   http_proxy: "{{ http_proxy }}"
   https_proxy: "{{ http_proxy }}"

- name: Install Docker and XDXCT container runtime
  become: yes
  become_user: root
  become_method: sudo
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    # - xdxct-container-runtime
  environment: 
   http_proxy: "{{ http_proxy }}"
   https_proxy: "{{ http_proxy }}"

- name: Check if docker-compose is installed
  command: docker-compose version
  register: compose_status
  ignore_errors: yes

- name: Copy docker-compose
  become: yes
  copy: 
    src: dist/docker-compose.{{ ansible_machine }}
    dest: /usr/local/bin/docker-compose
    mode: 0755
  when: compose_status.rc != 0

- name: Check if the docker group exists
  become: yes
  group:
    name: docker
    state: present

- name: Check if the user in docker group
  become: yes
  user: 
    name: "{{ ansible_env.USER }}"
    groups: docker
    append: yes

- name: Query the hosts config if it needs to be changed
  shell: cat /etc/hosts | grep hub.xdxct.com
  register: hosts_status
  ignore_errors: yes

- name: Modification hosts file
  become: yes
  become_user: root
  # become_method: sudo
  command: sh -c 'echo "10.211.10.15 hub.xdxct.com" >> /etc/hosts'
  when: hosts_status.rc != 0

- name: Check if xdxct.com.crt exists
  become: yes
  stat:
    path: /etc/docker/certs.d/hub.xdxct.com/xdxct.com.crt
  register: file_info

- name: Create the hub.xdxct.com directory
  become: yes
  file:
    path: /etc/docker/certs.d/hub.xdxct.com
    state: directory
  when: not file_info.stat.exists

- name: Copy the repository crt
  become: yes
  copy:
    src: xdxct.com.crt
    dest: /etc/docker/certs.d/hub.xdxct.com/xdxct.com.crt
  when: not file_info.stat.exists
  # notify: Restart the docker

- name: Restart the docker
  become: yes
  shell: systemctl restart docker

- name: Login to the hub.xdxct.com
  command: docker login -u admin --password-stdin hub.xdxct.com
  args:
    stdin: "Harbor12345"

- name: Check if xdxct-container-runtime deb package is installed
  become: yes
  command: dpkg -s xdxct-container-runtime
  register: runtime_status
  ignore_errors: yes

- name: Check if the docker installer of xdxct-container-runtime is installed
  become: yes
  stat:
    path: /usr/local/xdxct/toolkit
  register: toolkit_status
  
- name: Distribute the xdxct container runtime installer
  copy:
    src: xdxct_runtime_installer.sh
    dest: /tmp/xdxct_runtime_installer.sh
    mode: 0755
  when: runtime_status.rc != 0 and not toolkit_status.stat.exists

- name: Execute the xdxct container runtime installer
  become: yes
  command: /tmp/xdxct_runtime_installer.sh {{ runtime_installer_image_deb }}
  when: runtime_status.rc != 0 and not toolkit_status.stat.exists
